[
  {
    "objectID": "STATS COMP ASSIGN 2.html",
    "href": "STATS COMP ASSIGN 2.html",
    "title": "2  STATS COMPUTING ASSIGNMENT 2",
    "section": "",
    "text": "2.1 QUESTION 1\nlibrary(foreach)\nlibrary(doParallel)\n\nLoading required package: iterators\n\n\nLoading required package: parallel\n\nresults &lt;- foreach(i = 1:100) %do% {\n  vals &lt;- rexp(100, rate = 1)\n  mean_vals &lt;- mean(vals)\n  var_vals &lt;- var(vals)\n  return(rbind(mean_vals, var_vals))\n\n}\n\nresults\n\n[[1]]\n               [,1]\nmean_vals 1.0587256\nvar_vals  0.9556371\n\n[[2]]\n              [,1]\nmean_vals 0.952377\nvar_vals  1.334712\n\n[[3]]\n              [,1]\nmean_vals 1.186404\nvar_vals  1.286816\n\n[[4]]\n              [,1]\nmean_vals 1.091023\nvar_vals  1.323906\n\n[[5]]\n              [,1]\nmean_vals 1.060757\nvar_vals  1.275118\n\n[[6]]\n               [,1]\nmean_vals 1.0695393\nvar_vals  0.9420599\n\n[[7]]\n               [,1]\nmean_vals 0.9989615\nvar_vals  0.9608739\n\n[[8]]\n              [,1]\nmean_vals 1.013336\nvar_vals  1.270273\n\n[[9]]\n              [,1]\nmean_vals 1.006246\nvar_vals  1.042289\n\n[[10]]\n              [,1]\nmean_vals 1.026031\nvar_vals  1.343064\n\n[[11]]\n               [,1]\nmean_vals 1.0200028\nvar_vals  0.8428296\n\n[[12]]\n               [,1]\nmean_vals 0.8826857\nvar_vals  0.5147526\n\n[[13]]\n              [,1]\nmean_vals 1.132770\nvar_vals  1.423334\n\n[[14]]\n               [,1]\nmean_vals 0.9918531\nvar_vals  0.8354736\n\n[[15]]\n               [,1]\nmean_vals 1.0725884\nvar_vals  0.7942225\n\n[[16]]\n              [,1]\nmean_vals 1.006795\nvar_vals  1.063923\n\n[[17]]\n              [,1]\nmean_vals 1.023719\nvar_vals  1.004079\n\n[[18]]\n               [,1]\nmean_vals 0.9270459\nvar_vals  0.7422696\n\n[[19]]\n              [,1]\nmean_vals 1.001228\nvar_vals  1.725898\n\n[[20]]\n               [,1]\nmean_vals 0.8759518\nvar_vals  0.6842123\n\n[[21]]\n               [,1]\nmean_vals 1.0066837\nvar_vals  0.8083705\n\n[[22]]\n              [,1]\nmean_vals 1.178706\nvar_vals  1.361211\n\n[[23]]\n              [,1]\nmean_vals 1.031665\nvar_vals  1.008787\n\n[[24]]\n               [,1]\nmean_vals 1.1081618\nvar_vals  0.7376681\n\n[[25]]\n               [,1]\nmean_vals 0.9497839\nvar_vals  0.7686085\n\n[[26]]\n              [,1]\nmean_vals 1.004134\nvar_vals  1.023800\n\n[[27]]\n              [,1]\nmean_vals 1.226301\nvar_vals  1.483744\n\n[[28]]\n               [,1]\nmean_vals 0.7861603\nvar_vals  0.4669250\n\n[[29]]\n              [,1]\nmean_vals 1.167571\nvar_vals  1.598145\n\n[[30]]\n               [,1]\nmean_vals 1.0732635\nvar_vals  0.7922303\n\n[[31]]\n              [,1]\nmean_vals 1.076669\nvar_vals  1.008539\n\n[[32]]\n              [,1]\nmean_vals 1.223850\nvar_vals  1.013985\n\n[[33]]\n               [,1]\nmean_vals 1.0354144\nvar_vals  0.9206582\n\n[[34]]\n               [,1]\nmean_vals 1.0424557\nvar_vals  0.9392771\n\n[[35]]\n              [,1]\nmean_vals 1.166141\nvar_vals  1.352988\n\n[[36]]\n               [,1]\nmean_vals 0.9424371\nvar_vals  0.9447060\n\n[[37]]\n               [,1]\nmean_vals 0.9927132\nvar_vals  0.6656918\n\n[[38]]\n               [,1]\nmean_vals 0.9983396\nvar_vals  1.1948173\n\n[[39]]\n               [,1]\nmean_vals 0.9036811\nvar_vals  1.1902132\n\n[[40]]\n              [,1]\nmean_vals 1.154314\nvar_vals  1.052388\n\n[[41]]\n               [,1]\nmean_vals 0.9035919\nvar_vals  0.6687862\n\n[[42]]\n               [,1]\nmean_vals 0.9313140\nvar_vals  0.7827904\n\n[[43]]\n               [,1]\nmean_vals 0.9899004\nvar_vals  0.9436438\n\n[[44]]\n               [,1]\nmean_vals 0.8535429\nvar_vals  0.4511148\n\n[[45]]\n               [,1]\nmean_vals 0.8798962\nvar_vals  1.0459284\n\n[[46]]\n               [,1]\nmean_vals 0.8224917\nvar_vals  0.5888284\n\n[[47]]\n               [,1]\nmean_vals 1.0954506\nvar_vals  0.8942713\n\n[[48]]\n               [,1]\nmean_vals 0.8908771\nvar_vals  0.7825799\n\n[[49]]\n              [,1]\nmean_vals 1.093359\nvar_vals  1.837578\n\n[[50]]\n              [,1]\nmean_vals 1.125016\nvar_vals  1.408400\n\n[[51]]\n              [,1]\nmean_vals 1.047283\nvar_vals  1.169971\n\n[[52]]\n              [,1]\nmean_vals 1.092646\nvar_vals  1.337962\n\n[[53]]\n              [,1]\nmean_vals 1.055275\nvar_vals  1.243405\n\n[[54]]\n               [,1]\nmean_vals 0.9246305\nvar_vals  0.8764594\n\n[[55]]\n               [,1]\nmean_vals 0.8159158\nvar_vals  0.6779185\n\n[[56]]\n               [,1]\nmean_vals 0.9070225\nvar_vals  0.7270585\n\n[[57]]\n               [,1]\nmean_vals 1.0475768\nvar_vals  0.9666971\n\n[[58]]\n              [,1]\nmean_vals 1.002205\nvar_vals  1.281521\n\n[[59]]\n               [,1]\nmean_vals 0.8651742\nvar_vals  0.7665287\n\n[[60]]\n              [,1]\nmean_vals 1.155197\nvar_vals  1.413354\n\n[[61]]\n               [,1]\nmean_vals 0.9579361\nvar_vals  0.6989760\n\n[[62]]\n              [,1]\nmean_vals 1.088433\nvar_vals  0.952852\n\n[[63]]\n               [,1]\nmean_vals 1.0168270\nvar_vals  0.9415166\n\n[[64]]\n               [,1]\nmean_vals 1.0035410\nvar_vals  0.9956267\n\n[[65]]\n               [,1]\nmean_vals 1.1211447\nvar_vals  0.8876025\n\n[[66]]\n              [,1]\nmean_vals 1.110922\nvar_vals  1.088337\n\n[[67]]\n               [,1]\nmean_vals 1.0611765\nvar_vals  0.7627068\n\n[[68]]\n              [,1]\nmean_vals 0.908732\nvar_vals  1.034571\n\n[[69]]\n              [,1]\nmean_vals 0.942902\nvar_vals  0.470159\n\n[[70]]\n              [,1]\nmean_vals 1.261061\nvar_vals  2.237467\n\n[[71]]\n              [,1]\nmean_vals 1.034331\nvar_vals  1.142952\n\n[[72]]\n               [,1]\nmean_vals 0.9730690\nvar_vals  0.7913964\n\n[[73]]\n               [,1]\nmean_vals 0.9678028\nvar_vals  1.0293998\n\n[[74]]\n               [,1]\nmean_vals 0.8620032\nvar_vals  0.6132763\n\n[[75]]\n               [,1]\nmean_vals 0.8844502\nvar_vals  0.6554400\n\n[[76]]\n               [,1]\nmean_vals 0.9398444\nvar_vals  0.8662276\n\n[[77]]\n              [,1]\nmean_vals 1.179558\nvar_vals  1.470654\n\n[[78]]\n              [,1]\nmean_vals 1.050840\nvar_vals  1.165169\n\n[[79]]\n               [,1]\nmean_vals 0.8247247\nvar_vals  0.5629247\n\n[[80]]\n               [,1]\nmean_vals 0.9343454\nvar_vals  0.6951366\n\n[[81]]\n               [,1]\nmean_vals 0.8069799\nvar_vals  0.6017744\n\n[[82]]\n              [,1]\nmean_vals 1.144631\nvar_vals  1.216836\n\n[[83]]\n              [,1]\nmean_vals 1.185516\nvar_vals  1.604974\n\n[[84]]\n               [,1]\nmean_vals 1.1419153\nvar_vals  0.9199543\n\n[[85]]\n              [,1]\nmean_vals 1.125922\nvar_vals  1.314328\n\n[[86]]\n              [,1]\nmean_vals 1.072307\nvar_vals  1.035212\n\n[[87]]\n              [,1]\nmean_vals 1.056321\nvar_vals  1.017769\n\n[[88]]\n              [,1]\nmean_vals 1.125567\nvar_vals  1.300434\n\n[[89]]\n              [,1]\nmean_vals 1.161540\nvar_vals  1.372129\n\n[[90]]\n              [,1]\nmean_vals 1.045909\nvar_vals  1.249048\n\n[[91]]\n               [,1]\nmean_vals 0.9567360\nvar_vals  0.8523573\n\n[[92]]\n              [,1]\nmean_vals 1.045828\nvar_vals  0.854527\n\n[[93]]\n               [,1]\nmean_vals 0.7842939\nvar_vals  0.4546450\n\n[[94]]\n               [,1]\nmean_vals 1.0245078\nvar_vals  0.8901121\n\n[[95]]\n               [,1]\nmean_vals 0.8347568\nvar_vals  0.8018113\n\n[[96]]\n              [,1]\nmean_vals 1.060521\nvar_vals  0.799746\n\n[[97]]\n               [,1]\nmean_vals 0.9849316\nvar_vals  0.9137243\n\n[[98]]\n              [,1]\nmean_vals 1.098847\nvar_vals  1.061601\n\n[[99]]\n               [,1]\nmean_vals 0.7401929\nvar_vals  0.3912435\n\n[[100]]\n               [,1]\nmean_vals 0.8445437\nvar_vals  0.6407750",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>STATS COMPUTING ASSIGNMENT 2</span>"
    ]
  },
  {
    "objectID": "STATS COMP ASSIGN 2.html#question-2",
    "href": "STATS COMP ASSIGN 2.html#question-2",
    "title": "2  STATS COMPUTING ASSIGNMENT 2",
    "section": "2.2 QUESTION 2",
    "text": "2.2 QUESTION 2\n\nlibrary(foreach)\nlibrary(doParallel)\n\nlibrary(MASS)\ngal &lt;- galaxies\n\nB&lt;- 1000\ntboot &lt;- numeric(B) \n\n#Doing 1000 single bootstraps\nsystem.time({\n  result &lt;- foreach(i = 1:1000, .combine = c) %do% {\n    tboot[i] &lt;- median(sample(gal, replace=TRUE))\n  }\n})\n\nsystem.time({\n  for (i in 1:B) {\n    tboot[i] &lt;- median(sample(gal, replace = T))\n  }\n})\n\n#Doing 1000 bootstrap samples at a Time\nsystem.time({\n  result &lt;- foreach(i = 1:1000, .combine = c) %do% {\n    replicate(1000, median(sample(gal, replace=TRUE)))\n  }\n})\nR &lt;- 1000  \nbias &lt;- rep(NA, times = R)\ntboot2 &lt;- rep(NA, times = B)  \n\nsystem.time({\nfor (j in 1:1000) {\n  \n  for (i in 1:1000) {\n    tboot2[i] &lt;- median(sample(gal, replace = T))\n  }\n}\n})",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>STATS COMPUTING ASSIGNMENT 2</span>"
    ]
  },
  {
    "objectID": "STATS COMP ASSIGN 2.html#question-3",
    "href": "STATS COMP ASSIGN 2.html#question-3",
    "title": "2  STATS COMPUTING ASSIGNMENT 2",
    "section": "2.3 QUESTION 3",
    "text": "2.3 QUESTION 3\n\nlibrary(foreach)\nlibrary(doParallel)\n\nn&lt;-50\nu&lt;- rexp(n,rate=1)\nmean.1 &lt;- mean(u)\ntrue_mean &lt;- 1 \n\nB&lt;-1000\nc1 &lt;- c()\nc2 &lt;- c()\nBootstr_mean &lt;- numeric(B)\nresult &lt;- 0\n\n\ncl &lt;- makeCluster(3)\nregisterDoParallel(cl)\n\nresult &lt;- foreach(i= 1:B, .combine='+') %dopar%{\n  samp_data &lt;- rexp(n, rate=1)\n  Bootstr_mean &lt;- replicate(B, mean(sample(samp_data, replace=TRUE)))\n  Percintile &lt;- quantile(Bootstr_mean, c(0.025, 0.975))\n  \n  if (Percintile[1] &lt;= true_mean && Percintile[2] &gt;= true_mean){\n    return(1)\n  } else{\n    return(0)\n  }\n  \n  \n}\n\ncoverage &lt;- result/B\ncoverage\ncat(\"coverage of a percentile bootstrap confidence interval is \", coverage,\"\\n\")\nstopCluster(cl)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>STATS COMPUTING ASSIGNMENT 2</span>"
    ]
  },
  {
    "objectID": "STATS COMP ASSIGN 2.html#question-4",
    "href": "STATS COMP ASSIGN 2.html#question-4",
    "title": "2  STATS COMPUTING ASSIGNMENT 2",
    "section": "2.4 QUESTION 4",
    "text": "2.4 QUESTION 4\n\nlibrary(foreach)\n\nset.seed(1234)\nresult &lt;- foreach(i = 1:3) %do% {\n  it &lt;- irnorm(5)\n  nextElem(it)\n  nextElem(it)\n  nextElem(it)\n  nextElem(it)\n  nextElem(it)\n\n}\n\nfor (i in 1:3) {\n  maxi &lt;- max(result[[i]])\n  cat(\"Vector\", i, \"Max:\", maxi, \"\\n\")\n}",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>STATS COMPUTING ASSIGNMENT 2</span>"
    ]
  },
  {
    "objectID": "STATS COMP ASSIGN 2.html#question-5",
    "href": "STATS COMP ASSIGN 2.html#question-5",
    "title": "2  STATS COMPUTING ASSIGNMENT 2",
    "section": "2.5 QUESTION 5",
    "text": "2.5 QUESTION 5\n\n2.5.1 FOREACH\n\nlibrary(parallel)\nlibrary(foreach)\nlibrary(iterators)\n\nset.seed(1234)\nresult &lt;- function() {\n  it &lt;- irnorm(5)\n  nextElem(it)\n  nextElem(it)\n  nextElem(it)\n  nextElem(it)\n  nextElem(it)\n}\n\nsystem.time({\n  result1 &lt;- foreach(i = 1:3) %do% {\n    result()\n  }\n\n  for (i in 1:3) {\n    maxi &lt;- max(result1[[i]])\n    print(maxi)\n  }\n})\n\n[1] 0.4595894\n[1] -0.49685\n[1] 2.070271\n\n\n   user  system elapsed \n  0.005   0.000   0.005 \n\n\n\n\n2.5.2 parLapply\n\nlibrary(parallel)\nlibrary(iterators)\n\n\ncl &lt;- makeCluster(3) \nclusterExport(cl, varlist = c(\"result\", \"irnorm\", \"nextElem\"))  \n\nset.seed(1234)\nresult &lt;- function() {\n\n  it &lt;- irnorm(5)\n  nextElem(it)\n  nextElem(it)\n  nextElem(it)\n  nextElem(it)\n  nextElem(it)\n}\n\n\nsystem.time({\n  result2 &lt;- parLapply(cl, 1:3, function(i) {\n    result()\n  })\n  \n \n  result2 &lt;- do.call(cbind, result2)\n  \n  for (i in 1:3) {\n    maxi &lt;- max(result2[, i])\n    print(maxi)\n  }\n})\n\n[1] 1.740094\n[1] 1.735077\n[1] 1.79209\n\n\n   user  system elapsed \n  0.003   0.000   0.003 \n\nstopCluster(cl)\n\n\n\n\n\n2.5.3 REPLICATE\n\nlibrary(parallel)\nlibrary(iterators)\n\nset.seed(1234)\nresult &lt;- function() {\n  it &lt;- irnorm(5)\n  nextElem(it)\n  nextElem(it)\n  nextElem(it)\n  nextElem(it)\n  nextElem(it)\n}\n\nsystem.time({\n  result2 &lt;- replicate(n = 3, result())\n\n  for (i in 1:3) {\n    maxi &lt;- max(result2[,i])\n    print(maxi)\n  }\n})\n\n[1] 0.4595894\n[1] -0.49685\n[1] 2.070271\n\n\n   user  system elapsed \n  0.002   0.000   0.003",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>STATS COMPUTING ASSIGNMENT 2</span>"
    ]
  }
]